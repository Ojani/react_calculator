{"version":3,"sources":["button.js","App.js","screen.js","mem-controls.js","index.js"],"names":["Button","symbol","clickHandler","btnClass","className","onClick","dangerouslySetInnerHTML","__html","App","useState","memory","setMemory","screenContent","setScreenContent","expression","setExpression","memoryIndex","setMemoryIndex","express","value","newExpression","replace","clear","navigateMemory","jumps","newIndex","currentMemo","calculate","newMemory","length","slice","foundLeft","match","foundRight","touchingParentheses","found","result","forEach","str","console","log","eval","useEffect","readableExpression","memoryLength","prevClickHandeler","nextClickHandeler","Screen","MemBtn","upClass","downClass","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a59779e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Button({ symbol, clickHandler }) {\n    var btnClass = 'button'\n    if(symbol === '') btnClass = 'button hidden';\n\n    return(\n        <div className={ btnClass } onClick={ clickHandler }\n        dangerouslySetInnerHTML={{__html: symbol}}>\n            \n        </div>\n    );\n} ","import React, { useState, useEffect, memo } from 'react';\nimport './App.css';\nimport Screen from './screen';\nimport Button from './button';\nimport MemoryButton from './mem-controls';\n\n\nfunction App() {\n\n  const [memory, setMemory] = useState([]);\n  const [screenContent, setScreenContent] = useState('');\n  const [expression, setExpression] = useState('');\n  const [memoryIndex, setMemoryIndex] = useState(0);\n\n  useEffect(() => {\n    const readableExpression = expression.replace(/\\*{2}/g, \"^\").replace(/\\*/g, \"x\").replace(/\\//g, \"รท\");\n    setScreenContent(readableExpression);\n\n  }, [expression]);\n\n  function express(value) {\n    const newExpression = expression.replace(/Error/, '');\n\n    setExpression(newExpression + value);\n  }\n\n  function clear() {\n    setExpression('');\n  }\n\n  // Going back or forth into calculator memory\n  function navigateMemory(jumps) {\n    var newIndex = memoryIndex +jumps;\n    setMemoryIndex(newIndex);\n\n    var currentMemo = memory[newIndex];\n    setExpression(currentMemo.expression);\n  }\n\n  function calculate() {\n    // doing nothing if there is nothing to express\n    if(!expression) return;\n\n    //updating calculator memory.\n    setMemory(memory => {\n      var newMemory;\n\n      //removing oldest memory item to keep it 25 items or below\n      if(memory.length >= 25) {\n        newMemory = memory.slice(1, memory.length);\n      } else {\n        newMemory = [ ...memory ];\n      }\n\n      return [...newMemory, {\n        expression: expression\n      }];\n    });\n\n    var newExpression = expression;\n\n    //replacing #(# for #*( & #)# for #)*#\n    var foundLeft = newExpression.match(/[0-9]\\(/g) || [];\n    var foundRight = newExpression.match(/\\)[0-9]/g) || [];\n    var touchingParentheses = newExpression.match(/\\)\\(/g) || [];\n    \n    const found = [...foundLeft, ...foundRight, ...touchingParentheses];\n    found.forEach(str => {\n      newExpression = newExpression.replace(str, str[0] + \"*\" + str[1]);\n    });\n\n    \n    console.log(`Unparsed expression: \\n ${ newExpression }`);\n\n    var result;\n    try {\n      result = `${ eval(newExpression) }`;\n    } catch {\n      result = \"NaN\";\n    }\n    \n    if(result === \"Infinity\" || result === \"NaN\" || result === \"-Infinity\") {\n      setExpression('Error');\n    } else {\n      setExpression(result);\n    }\n    setMemoryIndex(memory.length +1);\n  }\n\n  return (\n    <div className='calculator'>\n\n      <div className='screen-wrapper'>\n        <Screen screenContent={ screenContent } memory={ memory } />\n        <MemoryButton memoryIndex={ memoryIndex } memoryLength={ memory.length } prevClickHandeler={ () => navigateMemory(-1) } nextClickHandeler={ () => navigateMemory(1) } />\n      </div>\n\n      <div className='buttons'>\n\n        <div className='row'>\n         <Button symbol='(' clickHandler={ () => express('(') }/>\n         <Button symbol=')' clickHandler={ () => express(')') }/>\n         <Button symbol='x<sup>y</sup>'  clickHandler={ () => express('**') }/>\n         <Button symbol='Ac'  clickHandler={ clear }/>\n        </div>\n\n        <div className='row'>\n         <Button symbol='1'  clickHandler={ () => express('1') }/>\n         <Button symbol='2'  clickHandler={ () => express('2') }/>\n         <Button symbol='3'  clickHandler={ () => express('3') }/>\n         <Button symbol='รท'  clickHandler={ () => express('/') }/>\n        </div>\n\n        <div className='row'>\n         <Button symbol='4'  clickHandler={ () => express('4') }/>\n         <Button symbol='5' clickHandler={ () => express('5') }/>\n         <Button symbol='6' clickHandler={ () => express('6') }/>\n         <Button symbol='x' clickHandler={ () => express('*') }/>\n        </div>\n\n        <div className='row'>\n         <Button symbol='7' clickHandler={ () => express('7') }/>\n         <Button symbol='8' clickHandler={ () => express('8') }/>\n         <Button symbol='9' clickHandler={ () => express('9') }/>\n         <Button symbol='+' clickHandler={ () => express('+') }/>\n        </div>\n\n        <div className='row'>\n         <Button symbol='.' clickHandler={ () => express('.') }/>\n         <Button symbol='0' clickHandler={ () => express('0') }/>\n         <Button symbol='=' clickHandler={ calculate }/>\n         <Button symbol='-' clickHandler={ () => express('-') }/>\n        </div>\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nexport default function Screen({ screenContent }) {\n    return(\n        <div className='screen'>\n            { screenContent }\n        </div>\n    );\n} ","import React from 'react';\n\nexport default function MemBtn({ memoryIndex, memoryLength, prevClickHandeler, nextClickHandeler }) {\n    var upClass = 'mem-up';\n    if(memoryIndex < 1) {\n        upClass = 'mem-up hidden';\n    }\n\n    var downClass = 'mem-down';\n    if(memoryIndex >= memoryLength -1) {\n        downClass = 'mem-down hidden';\n    }\n\n    return(\n        <div className='mem-btn'>\n            <div className={ upClass } onClick={ prevClickHandeler }> &#9650; </div>\n            <div className={ downClass } onClick={ nextClickHandeler }> &#9660; </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}